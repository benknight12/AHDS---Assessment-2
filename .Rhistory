ggplot(linked_data,aes(x=WTS_FFQ))+
geom_histogram()
summary(linked_data$WTS_FFQ)
summary(linked_data$DRDINT)
tomatojuicedata <- linked_data[, c("FFQ0001","BMXBMI", "FFQ0006A")]
head(tomatojuicedata)
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001="88"]="NA"
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"]="NA"
head(tomatojuicedata)
tomatojuicedata$FFQ0001
na.omit(tomatojuicedata$FFQ0001)
na.omit(tomatojuicedata)
ggplot(tomatojuicedata, aes(x=as.factor("FFQ0001",y=BMXBMI))) +
geom_point()
ggplot(tomatojuicedata, aes(x=as.factor("FFQ0001",y="BMXBMI"))) +
geom_point()
ggplot(tomatojuicedata, aes(x=as.factor("FFQ0001"),y="BMXBMI")) +
geom_point()
ggplot(tomatojuicedata, aes(x=as.factor("FFQ0001"),y="BMXBMI")) +
geom_boxplot()
tomatojuicedata$
ggplot(tomatojuicedata, aes(x="FFQ0001",y="BMXBMI")) +
geom_boxplot(aes(x=as.factor("FFQ0001"),y="BMXBMI"))
tomatojuicedata$
ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))
tomatojuicedata$
ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))
tomatojuicedata$
ggplot(tomatojuicedata,mapping= aes(x=as.factor(FFQ0001),y=BMXBMI)) +
geom_boxplot()
ggplot(tomatojuicedata,mapping= aes(x=as.factor(FFQ0001),y=BMXBMI)) +
geom_boxplot()
range(tomatojuicedata$BMXBMI)
ggplot(trimmed_data,aes(x=bmigrp,y=FFQ0135)) +
geom_boxplot()
## Add a factored version of BMI to the data set
trimmed_data$bmigrp <- ntile(trimmed_data$BMX,10)
ggplot(trimmed_data,aes(x=bmigrp,y=FFQ0135)) +
geom_boxplot()
ggplot(trimmed_data,aes(x=as.factor(bmigrp),y=FFQ0135)) +
geom_boxplot()
## Add a factored version of BMI to the data set
trimmed_data$bmigrp <- ntile(trimmed_data$BMX,10)
ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))
catmod <- lm(BMXBMI ~ as.factor(FFQ0001),data=tomatojuicedata)
catmod
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- "NA"
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- "NA"
tomatojuicedata <- na.omit(tomatojuicedata)
catmod <- lm(BMXBMI ~ as.factor(FFQ0001),data=tomatojuicedata)
catmod
head(tomatojuicedata)
(tomatojuicedata)
(tomatojuicedata$FFQ0001=="NA")
table(tomatojuicedata$FFQ0001=="NA")
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- "na"
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- "na"
table(tomatojuicedata$FFQ0001=="na")
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- "na"
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- "na"
tomatojuicedata <- linked_data[, c("FFQ0001","BMXBMI", "FFQ0006A")]
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- "na"
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- "na"
table(tomatojuicedata$FFQ0001=="na")
tomatojuicedata <- na.omit(tomatojuicedata)
table(tomatojuicedata$FFQ0001=="na")
tomatojuicedata <- linked_data[, c("FFQ0001","BMXBMI", "FFQ0006A")]
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- NA
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- NA
table(tomatojuicedata$FFQ0001==NA)
table(tomatojuicedata$FFQ0001=="NA")
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- NA
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- NA
table(tomatojuicedata$FFQ0001==NA)
tomatojuicedata <- na.omit(tomatojuicedata)
head(tomatojuicedata)
nrow(tomatojuicedata)
catmod <- lm(BMXBMI ~ as.factor(FFQ0001),data=tomatojuicedata)
catmod
cipredict<-add_ci(data.frame(FFQ001=c(1,2,3,4,5,6,7,8,9,10)), catmod, alpha = 0.05, names = NULL, yhatName = "pred")
library(ciTools)
cipredict<-add_ci(data.frame(FFQ001=c(1,2,3,4,5,6,7,8,9,10)), catmod, alpha = 0.05, names = NULL, yhatName = "pred")
cipredict<-add_ci(data.frame(FFQ0001=c(1,2,3,4,5,6,7,8,9,10)), catmod, alpha = 0.05, names = NULL, yhatName = "pred")
tomatojuicedata$pred <- catmod$fitted.values
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001+1,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=tomatojuicedata+1,y=pred,group=1),data=cipredict,col='red')
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001+1,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001+1,y=pred,group=1),data=cipredict,col='red')
cipredict
g <- g + geom_ribbon(data = cipredict, aes(x = tomato+1, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001+1,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001+1,y=pred,group=1),data=cipredict,col='red')
g
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001+1,y=pred,group=1),data=cipredict,col='red')
g
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')
g
g <- g + geom_ribbon(data = cipredict, aes(x = tomato+1, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')
g
cipredict
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')+
scale_y_continuous(limits=c(0,50), breaks=seq(0,100,10), expand = c(0, 0))
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')+
scale_y_continuous(limits=c(0,50), breaks=seq(0,100,10), expand = c(0, 0))
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')+
scale_y_continuous(limits=c(0,50), breaks=seq(0,100,10), expand = c(0, 0))
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')+
scale_y_continuous(limits=c(0,50), breaks=seq(0,100,10), expand = c(0, 0))
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')+
scale_y_continuous(limits=c(0,50), breaks=seq(0,100,10), expand = c(0, 0))
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
tomatojuicedata <- linked_data[, c("FFQ0001","BMXBMI", "FFQ0006A")]
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- NA
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- NA
tomatojuicedata %>% na.omit()
nrow(tomatojuicedata)
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- NA
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- NA
tomatojuicedata <- na.omit(tomatojuicedata)
nrow(tomatojuicedata)
## Add section to remove extreme BMI Data points
linked_data <- filter(linked_data,60>BMXBMI>10)
## Add section to remove extreme BMI Data points
linked_data <- filter(linked_data, BMXBMI>10 & BMXBMI<60)
nrow(linked_data)
range(linked_data$BMXBMI)
tomatojuicedata <- linked_data[, c("FFQ0001","BMXBMI", "FFQ0006A")]
## remove 'blanks'
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="88"] <- NA
tomatojuicedata$FFQ0001[tomatojuicedata$FFQ0001=="99"] <- NA
tomatojuicedata <- na.omit(tomatojuicedata)
catmod <- lm(BMXBMI ~ as.factor(FFQ0001),data=tomatojuicedata)
catmod
tomatojuicedata$pred <- catmod$fitted.values
library(ciTools)
cipredict<-add_ci(data.frame(FFQ0001=c(1,2,3,4,5,6,7,8,9,10)), catmod, alpha = 0.05, names = NULL, yhatName = "pred")
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')+
scale_y_continuous(limits=c(0,50), breaks=seq(0,100,10), expand = c(0, 0))
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')+
scale_y_continuous(limits=c(0,70), breaks=seq(0,100,10), expand = c(0, 0))
g <- g + geom_ribbon(data = cipredict, aes(x = FFQ0001, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red')
g
juicedata <- linked_data[, c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ006","FFQ0006A")]
juicedata <- linked_data[, c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ006","FFQ0006A")]
juicedata <- linked_data[,c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ006","FFQ0006A")]
juicedata <- linked_data[,c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ006","FFQ0006A")]
juicedata <- linked_data[ ,c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ006","FFQ0006A")]
juicedata <- linked_data[]
juicedata <- linked_data[,c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ006","FFQ0006A")]
juicedata <- linked_data[, c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ006","FFQ0006A")]
juicedata <- linked_data[, c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ006","FFQ0006A")]
juicedata <- linked_data[, c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004")]
juicedata <- linked_data[, c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005")]
juicedata <- linked_data[, c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ0006","FFQ0006A")]
colnames(juicedata) <- c("BMI","Tomato","Orange","Apple","Grape","100%","Other","Diet")
head(juicedata)
juicedata[i][juicedata[i]=="88"] <- NA
## Remove rows where we have blank or error data
for (i in 1:length(names(juicedata))){
juicedata[i][juicedata[i]=="88"] <- NA
juicedata[i][juicedata[i]=="99"] <- NA
}
head(juicedata)
range(juicedata$Diet)
juicedata <- na.omit(juicedata)
nrow(juicedata)
head(juicedata)
juicedata$tompred <- catmodtom$fitted.values
colnames(juicedata) <- c("BMI","Tomato","Orange","Apple","Grape","%100","Other","Diet")
colnames(juicedata) <- c("BMI","Tomato","Orange","Apple","Grape","%hundred","Other","Diet")
colnames(juicedata) <- c("BMI","Tomato","Orange","Apple","Grape","hundred","Other","Diet")
## Generate the linear models and subsequently the predicted values describing each juice and bmi relationship
catmodtom <- lm(BMXBMI ~ as.factor(Tomato),data=juicedata)
## Create data frame with just juice data
juicedata <- linked_data[, c("BMXBMI","FFQ0001","FFQ0002","FFQ0003","FFQ0004","FFQ0005","FFQ0006","FFQ0006A")]
colnames(juicedata) <- c("BMI","Tomato","Orange","Apple","Grape","hundred","Other","Diet")
head(juicedata)
## Remove rows where we have blank or error data
for (i in 1:length(names(juicedata))){
juicedata[i][juicedata[i]=="88"] <- NA
juicedata[i][juicedata[i]=="99"] <- NA
}
juicedata <- na.omit(juicedata)
nrow(juicedata)
## Generate the linear models and subsequently the predicted values describing each juice and bmi relationship
catmodtom <- lm(BMXBMI ~ as.factor(Tomato),data=juicedata)
names(juicedata)
## Generate the linear models and subsequently the predicted values describing each juice and bmi relationship
catmodtom <- lm(BMI ~ as.factor(Tomato),data=juicedata)
catmodora <- lm(BMI ~ as.factor(Orange),data=juicedata)
catmodapp <- lm(BMI ~ as.factor(Apple),data=juicedata)
catmodgra <- lm(BMI ~ as.factor(Grape),data=juicedata)
catmod100 <- lm(BMI ~ as.factor(hundred),data=juicedata)
catmodoth <- lm(BMI ~ as.factor(Other),data=juicedata)
juicedata$tompred <- catmodtom$fitted.values
juicedata$orapred <- catmodora$fitted.values
juicedata$apppred <- catmodapp$fitted.values
juicedata$grapred <- catmodgra$fitted.values
juicedata$pred100 <- catmod100$fitted.values
juicedata$othpred <- catmodoth$fitted.values
cipredicttom<-add_ci(data.frame(Tomato=c(1,2,3,4,5,6,7,8,9,10)), catmodtom, alpha = 0.05, names = NULL, yhatName = "pred")
cipredictora<-add_ci(data.frame(Orange=c(1,2,3,4,5,6,7,8,9,10)), catmodora, alpha = 0.05, names = NULL, yhatName = "pred")
cipredictapp<-add_ci(data.frame(Apple=c(1,2,3,4,5,6,7,8,9,10)), catmodapp, alpha = 0.05, names = NULL, yhatName = "pred")
cipredictgra<-add_ci(data.frame(Grape=c(1,2,3,4,5,6,7,8,9,10)), catmodgra, alpha = 0.05, names = NULL, yhatName = "pred")
cipredict100<-add_ci(data.frame(hundred=c(1,2,3,4,5,6,7,8,9,10)), catmod100, alpha = 0.05, names = NULL, yhatName = "pred")
cipredictoth<-add_ci(data.frame(Other=c(1,2,3,4,5,6,7,8,9,10)), catmodoth, alpha = 0.05, names = NULL, yhatName = "pred")
plotasfac <- ggplot() +
geom_line(aes(x=Tomato,y=pred),data=cipredicttom,col="red") +
geom_line(aes(x=Orange,y=pred),data=cipredictora,col="blue") +
geom_line(aes(x=Apple,y=pred),data=cipredictapp,col="green") +
geom_line(aes(x=Grape,y=pred),data=cipredictgra,col="orange") +
geom_line(aes(x=hundred,y=pred),data=cipredict100,col="pink") +
geom_line(aes(x=Other,y=pred),data=cipredictoth,col="cyan") +
plotasfac
plotasfac <- ggplot() +
geom_line(aes(x=Tomato,y=pred),data=cipredicttom,col="red") +
geom_line(aes(x=Orange,y=pred),data=cipredictora,col="blue") +
geom_line(aes(x=Apple,y=pred),data=cipredictapp,col="green") +
geom_line(aes(x=Grape,y=pred),data=cipredictgra,col="orange") +
geom_line(aes(x=hundred,y=pred),data=cipredict100,col="pink") +
geom_line(aes(x=Other,y=pred),data=cipredictoth,col="cyan")
plotasfac
plotasfac <- plotasfac +
geom_ribbon(data = cipredicttom, aes(x = Tomato, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
geom_ribbon(data = cipredictora, aes(x = Orange, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
geom_ribbon(data = cipredictapp, aes(x = Apple, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
geom_ribbon(data = cipredictgra, aes(x = Grape, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
geom_ribbon(data = cipredict100, aes(x = hundred, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
geom_ribbon(data = cipredictoth, aes(x = Other, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
plotasfac
plotasfac <- plotasfac +
geom_ribbon(data = cipredicttom, aes(x = Tomato, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
geom_ribbon(data = cipredictora, aes(x = Orange, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'blue') +
geom_ribbon(data = cipredictapp, aes(x = Apple, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'green') +
geom_ribbon(data = cipredictgra, aes(x = Grape, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'orange') +
geom_ribbon(data = cipredict100, aes(x = hundred, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'pink') +
geom_ribbon(data = cipredictoth, aes(x = Other, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'cyan')
plotasfac
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=T),formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
juicedata
g <- ggplot(tomatojuicedata,mapping= aes(x=FFQ0001,y=BMXBMI)) +
geom_boxplot(aes(x=as.factor(FFQ0001),y=BMXBMI))  +
geom_smooth(method="lm",formula=y~as.numeric(x), fill="#69b3a2",level=0.95) +
geom_line(aes(x=FFQ0001,y=pred,group=1),data=cipredict,col='red')+
scale_y_continuous(limits=c(0,70), breaks=seq(0,100,10), expand = c(0, 0))
juicedata
head(juicedata)
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI),formula=y~as.numeric(x), fill="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI),formula=y~as.numeric(x), fill="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI),formula=y~as.numeric(x), fill="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI),formula=y~as.numeric(x), fill="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI),formula=y~as.numeric(x), fill="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI),formula=y~as.numeric(x), fill="cyan",level=0.95)
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI),formula=y~as.numeric(x), fill="red",col="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI),formula=y~as.numeric(x), fill="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI),formula=y~as.numeric(x), fill="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI),formula=y~as.numeric(x), fill="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI),formula=y~as.numeric(x), fill="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI),formula=y~as.numeric(x), fill="cyan",level=0.95)
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI),formula=y~as.numeric(x), fill="red",col="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI),formula=y~as.numeric(x), fill="blue",col="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI),formula=y~as.numeric(x), fill="green",col="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI),formula=y~as.numeric(x), fill="orange",col="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI),formula=y~as.numeric(x), fill="pink",col="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI),formula=y~as.numeric(x), fill="cyan",col="cyan",level=0.95)
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI),formula=y~as.numeric(x), fill="red",col="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI),formula=y~as.numeric(x), fill="blue",col="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI),formula=y~as.numeric(x), fill="green",col="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI),formula=y~as.numeric(x), fill="orange",col="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI),formula=y~as.numeric(x), fill="pink",col="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI),formula=y~as.numeric(x), fill="cyan",col="cyan",level=0.95) +
theme(legend.title = element_text(colour="blue", size=10,
face="bold"))
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI,color="red"),formula=y~as.numeric(x), fill="red",col="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI),formula=y~as.numeric(x), fill="blue",col="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI),formula=y~as.numeric(x), fill="green",col="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI),formula=y~as.numeric(x), fill="orange",col="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI),formula=y~as.numeric(x), fill="pink",col="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI),formula=y~as.numeric(x), fill="cyan",col="cyan",level=0.95) +
theme(legend.title = element_text(colour="blue", size=10,
face="bold"))
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI,color=factor(cyl)),formula=y~as.numeric(x), fill="red",col="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI),formula=y~as.numeric(x), fill="blue",col="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI),formula=y~as.numeric(x), fill="green",col="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI),formula=y~as.numeric(x), fill="orange",col="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI),formula=y~as.numeric(x), fill="pink",col="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI),formula=y~as.numeric(x), fill="cyan",col="cyan",level=0.95) +
theme(legend.title = element_text(colour="blue", size=10,
face="bold"))
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI,color="Tomato"),formula=y~as.numeric(x), fill="red",col="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI,color="Orange"),formula=y~as.numeric(x), fill="blue",col="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI,color="Apple"),formula=y~as.numeric(x), fill="green",col="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI,color="Grape"),formula=y~as.numeric(x), fill="orange",col="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI,color="hundred"),formula=y~as.numeric(x), fill="pink",col="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI,color="Other"),formula=y~as.numeric(x), fill="cyan",col="cyan",level=0.95) +
scale_colour_manual(name="legend", values=c("red", "blue","green","orange","pink","cyan"))
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI,color="Tomato"),formula=y~as.numeric(x),level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI,color="Orange"),formula=y~as.numeric(x),level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI,color="Apple"),formula=y~as.numeric(x),level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI,color="Grape"),formula=y~as.numeric(x),level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI,color="hundred"),formula=y~as.numeric(x),level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI,color="Other"),formula=y~as.numeric(x),level=0.95) +
scale_colour_manual(name="legend", values=c("red", "blue","green","orange","pink","cyan"))
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI,color="Tomato"),formula=y~as.numeric(x), fill="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI,color="Orange"),formula=y~as.numeric(x), fill="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI,color="Apple"),formula=y~as.numeric(x), fill="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI,color="Grape"),formula=y~as.numeric(x), fill="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI,color="hundred"),formula=y~as.numeric(x), fill="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI,color="Other"),formula=y~as.numeric(x), fill="cyan",level=0.95) +
scale_colour_manual(name="legend", values=c("red", "blue","green","orange","pink","cyan"))
plotasnum
## Now produce numeric models of linear relationship
plotasnum <- ggplot(juicedata) +
geom_smooth(method="lm",mapping=aes(x=Tomato,y=BMI,color="Tomato"),formula=y~as.numeric(x), fill="red",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Orange,y=BMI,color="Orange"),formula=y~as.numeric(x), fill="blue",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Apple,y=BMI,color="Apple"),formula=y~as.numeric(x), fill="green",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Grape,y=BMI,color="Grape"),formula=y~as.numeric(x), fill="orange",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=hundred,y=BMI,color="hundred"),formula=y~as.numeric(x), fill="pink",level=0.95) +
geom_smooth(method="lm",mapping=aes(x=Other,y=BMI,color="Other"),formula=y~as.numeric(x), fill="cyan",level=0.95) +
scale_colour_manual(name="legend", values=c("green", "orange","pink","blue","cyan","red"))
plotasnum
plotasfac <- ggplot() +
geom_line(aes(x=Tomato,y=pred,color="Tomato"),data=cipredicttom,col="red") +
geom_line(aes(x=Orange,y=pred,color="Orange"),data=cipredictora,col="blue") +
geom_line(aes(x=Apple,y=pred,color="Apple"),data=cipredictapp,col="green") +
geom_line(aes(x=Grape,y=pred,color="Grape"),data=cipredictgra,col="orange") +
geom_line(aes(x=hundred,y=pred,color="hundred"),data=cipredict100,col="pink") +
geom_line(aes(x=Other,y=pred,color="Other"),data=cipredictoth,col="cyan") +
scale_colour_manual(name="legend", values=c("green", "orange","pink","blue","cyan","red"))
plotasfac <- plotasfac +
geom_ribbon(data = cipredicttom, aes(x = Tomato, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
geom_ribbon(data = cipredictora, aes(x = Orange, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'blue') +
geom_ribbon(data = cipredictapp, aes(x = Apple, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'green') +
geom_ribbon(data = cipredictgra, aes(x = Grape, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'orange') +
geom_ribbon(data = cipredict100, aes(x = hundred, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'pink') +
geom_ribbon(data = cipredictoth, aes(x = Other, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'cyan')
plotasfac
plotasfac <- ggplot() +
geom_line(aes(x=Tomato,y=pred,color="Tomato"),data=cipredicttom) +
geom_line(aes(x=Orange,y=pred,color="Orange"),data=cipredictora) +
geom_line(aes(x=Apple,y=pred,color="Apple"),data=cipredictapp) +
geom_line(aes(x=Grape,y=pred,color="Grape"),data=cipredictgra) +
geom_line(aes(x=hundred,y=pred,color="hundred"),data=cipredict100) +
geom_line(aes(x=Other,y=pred,color="Other"),data=cipredictoth) +
scale_colour_manual(name="legend", values=c("green", "orange","pink","blue","cyan","red"))
plotasfac <- plotasfac +
geom_ribbon(data = cipredicttom, aes(x = Tomato, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'red') +
geom_ribbon(data = cipredictora, aes(x = Orange, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'blue') +
geom_ribbon(data = cipredictapp, aes(x = Apple, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'green') +
geom_ribbon(data = cipredictgra, aes(x = Grape, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'orange') +
geom_ribbon(data = cipredict100, aes(x = hundred, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'pink') +
geom_ribbon(data = cipredictoth, aes(x = Other, ymin = LCB0.025, ymax = UCB0.975),inherit.aes = FALSE, linetype=2, alpha=0.1, fill = 'cyan')
plotasfac
png(file="plots/factorplot.png",
width=600, height=350)
plotasfac
dev.off()
png(file="plots/factorplot.png",
width=600, height=350)
plotasfac
dev.off()
png(file="plots/factorplot.png",
width=600, height=350)
plotasfac
dev.off()
png(file="plots/numericplot.png",
width=600, height=350)
plotasnum
dev.off()
input$PlotChoices
shiny::runApp('~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Week 9/numeric_vs_factor_plot_app')
runApp('~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Week 9/numeric_vs_factor_plot_app')
runApp('~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Week 9/numeric_vs_factor_plot_app')
runApp('~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Week 9/numeric_vs_factor_plot_app')
library(png)
Rlogo.png
grid::grid.raster(img)
library(png)
img <- readPNG(system.file("img", "plots/factorplot.png", package="png"))
img <- readPNG(system.file("plots/factorplot.png", package="png"))
img <- readPNG("plots/factorplot.png")
grid::grid.raster(img)
string <- cat("plots/",input$PlotChoices,"png")
runApp('~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Week 9/numeric_vs_factor_plot_app')
string <- paste("plots/",input$PlotChoices,"png")
input$PlotChoices="factorplot"
input$PlotChoices=
string <- paste("plots/","factorplot","png")
input$PlotChoices=
string <- paste("plots/","factorplot","png")
string <- paste("plots/","factorplot","png")
img <- readPNG(string)
string <- paste0("plots/",input$PlotChoices,"png")
string <- paste0("plots/","factorplot","png")
img <- readPNG(string)
string <- paste0("plots/","factorplot",".png")
img <- readPNG(string)
img
runApp('~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Week 9/numeric_vs_factor_plot_app')
renderImage(img)
runApp('~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Week 9/numeric_vs_factor_plot_app')
##   img <- readPNG(string)
# string <- paste0("plots/",input$PlotChoices,".png")
#    renderImage(img)
plotasfac
runApp('~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Week 9/numeric_vs_factor_plot_app')
source("~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Assessment 2/data_playaround.R", echo=TRUE)
png(file="plots/factorplot.png",
width=600, height=350)
plotasfac
source("~/Library/CloudStorage/OneDrive-UniversityofBristol/Health Data Science MSc/Applied Health Data Science/Assessment 2/data_playaround.R", echo=TRUE)
